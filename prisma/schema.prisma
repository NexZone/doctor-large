generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AutoroleData {
  activated    Boolean   @default(false)
  guildId      String    @id @map("guild_id")
  lastEditedAt DateTime? @updatedAt @map("last_edited_at")
  roleIds      String[]  @default([]) @map("role_ids")

  @@map("autorole")
}

model WinnerData {
  accepted    Boolean   @default(false)
  createdAt   DateTime  @default(now()) @map("created_at")
  prize       PrizeData @relation(fields: [prizeId], references: [id])
  prizeId     Int       @map("prize_id")
  quantityWon Int       @map("quantity_won")
  userId      String    @map("user_id")

  @@id([prizeId, userId])
  @@map("giveaway_winner")
}

model PrizeData {
  additionalInfo String?      @map("additional_info")
  createdAt      DateTime     @default(now()) @map("created_at")
  giveaway       GiveawayData @relation(fields: [giveawayId], references: [id])
  giveawayId     Int          @map("giveaway_id")
  id             Int          @id @default(autoincrement())
  name           String
  quantity       Int          @default(1)
  winners        WinnerData[]

  @@map("giveaway_prize")
}

model GiveawayData {
  active                  Boolean     @default(true)
  channelId               String?     @map("channel_id")
  createdAt               DateTime    @default(now()) @map("created_at")
  description             String
  endTimestamp            String?     @map("end_timestamp")
  entriesLocked           Boolean     @default(false) @map("entries_locked")
  entriesUserIds          String[]    @default([]) @map("entries_user_ids")
  guildId                 String      @map("guild_id")
  guildRelativeId         Int         @map("guild_relative_id")
  hostUserId              String      @map("host_user_id")
  hostUserTag             String      @map("host_user_tag")
  id                      Int         @id @default(autoincrement())
  lastEditedAt            DateTime?   @updatedAt @map("last_edited_at")
  minimumAccountAge       String?     @map("minimum_account_age")
  pingRolesIds            String[]    @default([]) @map("ping_roles_ids")
  prizes                  PrizeData[]
  publishedMessageId      String?     @map("published_message_id")
  publishedMessageUpdated Boolean     @default(false) @map("published_message_updated")
  requiredRolesIds        String[]    @default([]) @map("required_roles_ids")
  title                   String
  winnerMessageId         String?     @map("winner_message_id")
  winnerMessageUpdated    Boolean     @default(false) @map("winner_message_updated")
  winnerQuantity          Int         @default(1) @map("winner_quantity")

  @@map("giveaway")
}
